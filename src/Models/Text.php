<?php

declare(strict_types=1);

/*
 * WhatsAppCloudAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace WhatsAppCloudAPILib\Models;

use stdClass;

class Text implements \JsonSerializable
{
    /**
     * @var string
     */
    private $body;

    /**
     * @var bool|null
     */
    private $previewUrl = false;

    /**
     * @param string $body
     */
    public function __construct(string $body)
    {
        $this->body = $body;
    }

    /**
     * Returns Body.
     * Required for text messages. The text of the text message which can contain URLs which begin with
     * http:// or https:// and formatting. See available formatting options here. If you include URLs in
     * your text and want to include a preview box in text messages (preview_url: true), make sure the URL
     * starts with http:// or https:// —https:// URLs are preferred. You must include a hostname, since IP
     * addresses will not be matched.
     */
    public function getBody(): string
    {
        return $this->body;
    }

    /**
     * Sets Body.
     * Required for text messages. The text of the text message which can contain URLs which begin with
     * http:// or https:// and formatting. See available formatting options here. If you include URLs in
     * your text and want to include a preview box in text messages (preview_url: true), make sure the URL
     * starts with http:// or https:// —https:// URLs are preferred. You must include a hostname, since IP
     * addresses will not be matched.
     *
     * @required
     * @maps body
     */
    public function setBody(string $body): void
    {
        $this->body = $body;
    }

    /**
     * Returns Preview Url.
     * By default, WhatsApp recognizes URLs and makes them clickable, but you can also include a preview
     * box with more information about the link. Set this field to true if you want to include a URL
     * preview box. The majority of the time, the receiver will see a URL they can click on when you send
     * an URL, set preview_url to true, and provide a body object with a http or https link. URL previews
     * are only rendered after one of the following has happened: The business has sent a message template
     * to the user. The user initiates a conversation with a "click to chat" link. The user adds the
     * business phone number to their address book and initiates a conversation.
     */
    public function getPreviewUrl(): ?bool
    {
        return $this->previewUrl;
    }

    /**
     * Sets Preview Url.
     * By default, WhatsApp recognizes URLs and makes them clickable, but you can also include a preview
     * box with more information about the link. Set this field to true if you want to include a URL
     * preview box. The majority of the time, the receiver will see a URL they can click on when you send
     * an URL, set preview_url to true, and provide a body object with a http or https link. URL previews
     * are only rendered after one of the following has happened: The business has sent a message template
     * to the user. The user initiates a conversation with a "click to chat" link. The user adds the
     * business phone number to their address book and initiates a conversation.
     *
     * @maps preview_url
     */
    public function setPreviewUrl(?bool $previewUrl): void
    {
        $this->previewUrl = $previewUrl;
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        $json['body']            = $this->body;
        if (isset($this->previewUrl)) {
            $json['preview_url'] = $this->previewUrl;
        }

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
