<?php

declare(strict_types=1);

/*
 * WhatsAppCloudAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace WhatsAppCloudAPILib\Models;

use stdClass;

class RetrieveMediaURLResponse implements \JsonSerializable
{
    /**
     * @var string
     */
    private $messagingProduct;

    /**
     * @var string
     */
    private $url;

    /**
     * @var string
     */
    private $mimeType;

    /**
     * @var string
     */
    private $sha256;

    /**
     * @var string
     */
    private $fileSize;

    /**
     * @var string
     */
    private $id;

    /**
     * @param string $messagingProduct
     * @param string $url
     * @param string $mimeType
     * @param string $sha256
     * @param string $fileSize
     * @param string $id
     */
    public function __construct(
        string $messagingProduct,
        string $url,
        string $mimeType,
        string $sha256,
        string $fileSize,
        string $id
    ) {
        $this->messagingProduct = $messagingProduct;
        $this->url = $url;
        $this->mimeType = $mimeType;
        $this->sha256 = $sha256;
        $this->fileSize = $fileSize;
        $this->id = $id;
    }

    /**
     * Returns Messaging Product.
     */
    public function getMessagingProduct(): string
    {
        return $this->messagingProduct;
    }

    /**
     * Sets Messaging Product.
     *
     * @required
     * @maps messaging_product
     */
    public function setMessagingProduct(string $messagingProduct): void
    {
        $this->messagingProduct = $messagingProduct;
    }

    /**
     * Returns Url.
     */
    public function getUrl(): string
    {
        return $this->url;
    }

    /**
     * Sets Url.
     *
     * @required
     * @maps url
     */
    public function setUrl(string $url): void
    {
        $this->url = $url;
    }

    /**
     * Returns Mime Type.
     */
    public function getMimeType(): string
    {
        return $this->mimeType;
    }

    /**
     * Sets Mime Type.
     *
     * @required
     * @maps mime_type
     */
    public function setMimeType(string $mimeType): void
    {
        $this->mimeType = $mimeType;
    }

    /**
     * Returns Sha 256.
     */
    public function getSha256(): string
    {
        return $this->sha256;
    }

    /**
     * Sets Sha 256.
     *
     * @required
     * @maps sha256
     */
    public function setSha256(string $sha256): void
    {
        $this->sha256 = $sha256;
    }

    /**
     * Returns File Size.
     */
    public function getFileSize(): string
    {
        return $this->fileSize;
    }

    /**
     * Sets File Size.
     *
     * @required
     * @maps file_size
     */
    public function setFileSize(string $fileSize): void
    {
        $this->fileSize = $fileSize;
    }

    /**
     * Returns Id.
     */
    public function getId(): string
    {
        return $this->id;
    }

    /**
     * Sets Id.
     *
     * @required
     * @maps id
     */
    public function setId(string $id): void
    {
        $this->id = $id;
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        $json['messaging_product'] = $this->messagingProduct;
        $json['url']               = $this->url;
        $json['mime_type']         = $this->mimeType;
        $json['sha256']            = $this->sha256;
        $json['file_size']         = $this->fileSize;
        $json['id']                = $this->id;

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
