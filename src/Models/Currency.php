<?php

declare(strict_types=1);

/*
 * WhatsAppCloudAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace WhatsAppCloudAPILib\Models;

use stdClass;

class Currency implements \JsonSerializable
{
    /**
     * @var string
     */
    private $fallbackValue;

    /**
     * @var string
     */
    private $code;

    /**
     * @var int
     */
    private $amount1000;

    /**
     * @param string $fallbackValue
     * @param string $code
     * @param int $amount1000
     */
    public function __construct(string $fallbackValue, string $code, int $amount1000)
    {
        $this->fallbackValue = $fallbackValue;
        $this->code = $code;
        $this->amount1000 = $amount1000;
    }

    /**
     * Returns Fallback Value.
     * Default text if localization fails.
     */
    public function getFallbackValue(): string
    {
        return $this->fallbackValue;
    }

    /**
     * Sets Fallback Value.
     * Default text if localization fails.
     *
     * @required
     * @maps fallback_value
     */
    public function setFallbackValue(string $fallbackValue): void
    {
        $this->fallbackValue = $fallbackValue;
    }

    /**
     * Returns Code.
     * Currency code as defined in ISO 4217.
     */
    public function getCode(): string
    {
        return $this->code;
    }

    /**
     * Sets Code.
     * Currency code as defined in ISO 4217.
     *
     * @required
     * @maps code
     */
    public function setCode(string $code): void
    {
        $this->code = $code;
    }

    /**
     * Returns Amount 1000.
     * Amount multiplied by 1000.
     */
    public function getAmount1000(): int
    {
        return $this->amount1000;
    }

    /**
     * Sets Amount 1000.
     * Amount multiplied by 1000.
     *
     * @required
     * @maps amount_1000
     */
    public function setAmount1000(int $amount1000): void
    {
        $this->amount1000 = $amount1000;
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        $json['fallback_value'] = $this->fallbackValue;
        $json['code']           = $this->code;
        $json['amount_1000']    = $this->amount1000;

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
