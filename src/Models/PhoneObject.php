<?php

declare(strict_types=1);

/*
 * WhatsAppCloudAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace WhatsAppCloudAPILib\Models;

use stdClass;

class PhoneObject implements \JsonSerializable
{
    /**
     * @var string|null
     */
    private $phone;

    /**
     * @var string|null
     */
    private $waId;

    /**
     * @var string|null
     */
    private $type;

    /**
     * Returns Phone.
     * Automatically populated with the wa_id value as a formatted phone number.
     */
    public function getPhone(): ?string
    {
        return $this->phone;
    }

    /**
     * Sets Phone.
     * Automatically populated with the wa_id value as a formatted phone number.
     *
     * @maps phone
     */
    public function setPhone(?string $phone): void
    {
        $this->phone = $phone;
    }

    /**
     * Returns Wa Id.
     * WhatsApp ID.
     */
    public function getWaId(): ?string
    {
        return $this->waId;
    }

    /**
     * Sets Wa Id.
     * WhatsApp ID.
     *
     * @maps wa_id
     */
    public function setWaId(?string $waId): void
    {
        $this->waId = $waId;
    }

    /**
     * Returns Type.
     */
    public function getType(): ?string
    {
        return $this->type;
    }

    /**
     * Sets Type.
     *
     * @maps type
     * @factory \WhatsAppCloudAPILib\Models\PhoneTypeEnum::checkValue
     */
    public function setType(?string $type): void
    {
        $this->type = $type;
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        if (isset($this->phone)) {
            $json['phone'] = $this->phone;
        }
        if (isset($this->waId)) {
            $json['wa_id'] = $this->waId;
        }
        if (isset($this->type)) {
            $json['type']  = PhoneTypeEnum::checkValue($this->type);
        }

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
