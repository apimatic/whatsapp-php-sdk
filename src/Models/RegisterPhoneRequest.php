<?php

declare(strict_types=1);

/*
 * WhatsAppCloudAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace WhatsAppCloudAPILib\Models;

use stdClass;

class RegisterPhoneRequest implements \JsonSerializable
{
    /**
     * @var string
     */
    private $messagingProduct;

    /**
     * @var string
     */
    private $pin;

    /**
     * @param string $messagingProduct
     * @param string $pin
     */
    public function __construct(string $messagingProduct, string $pin)
    {
        $this->messagingProduct = $messagingProduct;
        $this->pin = $pin;
    }

    /**
     * Returns Messaging Product.
     * Messaging service used. In this case, use "whatsapp".
     */
    public function getMessagingProduct(): string
    {
        return $this->messagingProduct;
    }

    /**
     * Sets Messaging Product.
     * Messaging service used. In this case, use "whatsapp".
     *
     * @required
     * @maps messaging_product
     */
    public function setMessagingProduct(string $messagingProduct): void
    {
        $this->messagingProduct = $messagingProduct;
    }

    /**
     * Returns Pin.
     * A 6-digit pin you have previously set up - See Set Two-Step Verification.
     */
    public function getPin(): string
    {
        return $this->pin;
    }

    /**
     * Sets Pin.
     * A 6-digit pin you have previously set up - See Set Two-Step Verification.
     *
     * @required
     * @maps pin
     */
    public function setPin(string $pin): void
    {
        $this->pin = $pin;
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        $json['messaging_product'] = $this->messagingProduct;
        $json['pin']               = $this->pin;

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
