<?php

declare(strict_types=1);

/*
 * WhatsAppCloudAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace WhatsAppCloudAPILib\Models;

use stdClass;

class Action implements \JsonSerializable
{
    /**
     * @var string|null
     */
    private $button;

    /**
     * @var Button[]|null
     */
    private $buttons;

    /**
     * @var Section[]|null
     */
    private $sections;

    /**
     * Returns Button.
     * Required for List Messages. Button content. It cannot be an empty string and must be unique within
     * the message. Emojis are supported, markdown is not.
     */
    public function getButton(): ?string
    {
        return $this->button;
    }

    /**
     * Sets Button.
     * Required for List Messages. Button content. It cannot be an empty string and must be unique within
     * the message. Emojis are supported, markdown is not.
     *
     * @maps button
     */
    public function setButton(?string $button): void
    {
        $this->button = $button;
    }

    /**
     * Returns Buttons.
     * Required for Reply Buttons. You can have up to 3 buttons. You cannot have leading or trailing spaces
     * when setting the ID.
     *
     * @return Button[]|null
     */
    public function getButtons(): ?array
    {
        return $this->buttons;
    }

    /**
     * Sets Buttons.
     * Required for Reply Buttons. You can have up to 3 buttons. You cannot have leading or trailing spaces
     * when setting the ID.
     *
     * @maps buttons
     *
     * @param Button[]|null $buttons
     */
    public function setButtons(?array $buttons): void
    {
        $this->buttons = $buttons;
    }

    /**
     * Returns Sections.
     * Required for List Messages.
     *
     * @return Section[]|null
     */
    public function getSections(): ?array
    {
        return $this->sections;
    }

    /**
     * Sets Sections.
     * Required for List Messages.
     *
     * @maps sections
     *
     * @param Section[]|null $sections
     */
    public function setSections(?array $sections): void
    {
        $this->sections = $sections;
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        if (isset($this->button)) {
            $json['button']   = $this->button;
        }
        if (isset($this->buttons)) {
            $json['buttons']  = $this->buttons;
        }
        if (isset($this->sections)) {
            $json['sections'] = $this->sections;
        }

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
